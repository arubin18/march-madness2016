{
    "collab_server" : "",
    "contents" : "library(arm)\nlibrary(pROC)\n\nrm(list=ls())\n\nsource(\"~/march_madness/get_winners.R\")\nsource(\"~/march_madness/mean_centering.R\")\n\nlibrary(readr)\nmatchups <- read_csv(\"~/march_madness/datasets/round1.csv\") # training data\nround1 <- read_csv(\"~/march_madness/datasets/round1_test.csv\") # testing data\n\n### correlation matrix c\n\ntest_correlations <- matchups\ntest_correlations$team <- NULL\ntest_correlations$opp_team <- NULL\n\ncor_relation <- round(cor(test_correlations), digits=3)\ncor_relation[abs(cor_relation) < 0.70] <- NA\nwrite.csv(cor_relation, \"~/march_madness/datasets/correlations.csv\")\n\n### notable correlations:\n# efg and ts are very correlated \n# efg is correlated with fg percent, fg3 percent, ppp\n# ts is correlated with fg percent, fg3 percent, ppp\n# win percent is very correlated with wins \n# ppg is correlated with possessions per game, total points, fga, fgm\n# opp points allowed is correlated with opp ppg\n\nmatchups$seed_dif = matchups$opp_seed - matchups$seed\n\nmatchups.c <- mean_centering(matchups)\n\nreg = glm(won~dppp + opp_dppp + ppp + opp_ppp + win_percent + opp_win_percent\n          + ts + opp_ts + seed_dif + points_allowed + opp_points_allowed\n          , data=matchups.c, family=binomial)\nsummary(reg)\n\n### too much multicolinearity and need a more simplistic model \nreg1 = stepAIC(reg,direction=\"both\",k=log(dim(matchups.c)[1]))\n\nroc(matchups$won, fitted(reg1), plot=T, legacy.axes=T)\n\nsummary(reg1)\n\nreg2 = update(reg1, ~. + opp_ppp + dppp)\nsummary(reg2)\n\nanova(reg1, reg2, test=\"Chisq\") # addition of both terms are not significant \n\nreg3 = update(reg1, ~. + total_possessions)\nsummary(reg3)\n\nanova(reg1, reg3, test=\"Chisq\") # variable is very significant\n\nrawresid3 = matchups$won - fitted(reg3)\n\n# use reg3\n\nroc(matchups$won, fitted(reg3), plot=T, legacy.axes=T) # predictive power increased\n\n# none of the interaction terms have significant p-values\nreg4 = glm(won~seed_dif * (opp_dppp + ppp + ts + total_possessions), data=matchups.c, family=binomial)\nsummary(reg4)\n\nanova(reg3, reg4, test=\"Chisq\") # interaction terms as a whole are not significant \n\nbinnedplot(x=matchups.c$seed_dif, y=rawresid3) # consider quadtratic transformation or cubic \nbinnedplot(x=matchups.c$opp_dppp, y=rawresid3) # consider cubic transformation\nbinnedplot(x=matchups.c$ppp, y=rawresid3)\nbinnedplot(x=matchups.c$ts, y=rawresid3)\nbinnedplot(x=matchups.c$total_possessions, y=rawresid3)\n\nmatchups$seed_dif2 = (matchups$seed_dif)^2\n\nmatchups.c = mean_centering(matchups)\n\nreg5 = glm(won~seed_dif + seed_dif2 + opp_dppp + ppp + ts + total_possessions\n           , data=matchups.c, family=binomial)\nsummary(reg5) # lowered p-values for other terms \n\nrawresid5 = matchups$won - fitted(reg5)\n\nroc(matchups$won, fitted(reg5), plot=T, legacy.axes=T) # slightly increased predictive power\n\nbinnedplot(x=matchups.c$seed_dif2, y=rawresid5) # residuals look much better\nbinnedplot(x=matchups.c$opp_dppp, y=rawresid5) # consider cubic transformation\n\n# use reg5\n\nmatchups$opp_dppp3 = (matchups$opp_dppp)^3\n\nmatchups.c = mean_centering(matchups)\n\nreg6 = glm(won~seed_dif + seed_dif2 + opp_dppp + opp_dppp3 + ppp + ts + total_possessions\n           , data=matchups.c, family=binomial)\nsummary(reg6) \n\nroc(matchups$won, fitted(reg6), plot=T, legacy.axes=T) # increased predictive power\n\nrawresid6 = matchups$won - fitted(reg6)\n\nbinnedplot(x=matchups.c$seed_dif, y=rawresid5)\nbinnedplot(x=matchups.c$opp_dppp, y=rawresid6) # residuals look better\n\nlibrary(\"car\")\n\nvif(reg6) # a lot of variance inflation of opp dpp 3\n\nvif(reg3)\n\nthreshold = 0.5\ntable(matchups$won, reg6$fitted > threshold) # many false positives\n\nround1$seed_dif = round1$opp_seed - round1$seed\nround1$seed_dif2 = (round1$seed_dif)^2\nround1$opp_dppp3 = (round1$opp_dppp)^3\n\nround1.c = mean_centering(round1, FALSE, TRUE)\n\n### predictions\n\npredictions = predict(reg6, round1.c, type=\"response\")\nlabels = round(predictions)\n\nround1P <- round1\nround1P$won <- labels\n\nwrite.csv(round1P, \"~/march_madness/datasets/round1_predictions.csv\", row.names=FALSE)\n\nwinners <- get_winners(round1P)\nwrite.csv(winners, \"~/march_madness/datasets/round1_winners.csv\", row.names=FALSE)\n",
    "created" : 1493943419268.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "2292565014",
    "id" : "4949DCA8",
    "lastKnownWriteTime" : 1493943456,
    "last_content_update" : 1493943456081,
    "path" : "~/march_madness/round1.R",
    "project_path" : "round1.R",
    "properties" : {
    },
    "relative_order" : 2,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_source"
}